{
Example for EEG Click

    Date          : Oct 2018.
    Author        : Nemanja Medakovic

Test configuration MSP :
    
    MCU              : MSP432
    Dev. Board       : Clicker 2 for MSP432
    ARM Compiler ver : v6.0.0.0

---

Description :

The application is composed of three sections :

- System Initialization - Initializes peripherals and pins.
- Application Initialization - Initializes ADC and timer interrupt function.
- Application Task - (code snippet) - Reads ADC value and sends results on serial plotter 
  every time when interrupt occurres.

Additional Functions :

- void initTimer32() - Initializes interrupt time to 1.95ms.

}
program Click_EEG_MSP;

uses Click_EEG_types, Click_EEG_config;

const
    time_ms : uint16_t = 5; 
    
var
    interrCnt : uint32_t; 
    interrFlag : uint8_t; 
    readADC : uint16_t; 
    timeRead : uint32_t; 
    text : array[50] of char; 
    
procedure initTimer32(); 
begin
    TIMER32_T32CONTROL1 := TIMER32_T32CONTROL1 and 0xFFFFFFFE; 
    TIMER32_T32CONTROL1 := TIMER32_T32CONTROL1 or 0x02; 
    TIMER32_T32CONTROL1 := TIMER32_T32CONTROL1 or 0; 
    TIMER32_T32CONTROL1 := TIMER32_T32CONTROL1 or 0x20; 
    TIMER32_T32CONTROL1 := TIMER32_T32CONTROL1 or 0x40; 
    TIMER32_T32LOAD1 := 0x0000BB80; 
    NVIC_IntEnable(IVT_INT_T32_INT1); 
end;

procedure plotRes(plotData : uint16_t; plotTime : uint32_t); 
begin
    WordToStr(plotData, text); 
    mikrobus_logWrite(text, _LOG_TEXT); 
    mikrobus_logWrite(',', _LOG_TEXT); 
    LongWordToStr(plotTime, text); 
    mikrobus_logWrite(text, _LOG_LINE); 
end;

procedure systemInit(); 
begin
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_INPUT); 
    mikrobus_logInit(_MIKROBUS2, 115200); 
    Delay_ms(200); 
end;

procedure applicationInit(); 
begin
    eeg_gpioDriverInit(T_EEG_P(@_MIKROBUS1_GPIO)); 
    Delay_ms(200); 
    ADC1_Init(); 
    ADC_Set_Input_Channel(_ADC_CHANNEL_15); 
    Delay_ms(200); 
    initTimer32(); 
    interrFlag := 0; 
    interrCnt := 0; 
    EnableInterrupts(); 
end;

procedure applicationTask(); 
begin
    if (interrFlag = 1) then 
    begin
        interrFlag := 0; 
        DisableInterrupts(); 
        readADC := ADC1_Get_Sample(15); 
        timeRead := interrCnt * time_ms; 
        plotRes(readADC, timeRead); 
        EnableInterrupts(); 
    end; 
end;

procedure Timer_interrupt(); iv IVT_INT_T32_INT1; 
begin
    TIMER32_T32INTCLR1 := 1; 
    interrFlag := 1; 
    if (interrCnt = 0x33333333) then 
    begin
        interrCnt := 0; 
    end
    else 
    begin
        inc(interrCnt);
    end;
end;

begin

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;
end.